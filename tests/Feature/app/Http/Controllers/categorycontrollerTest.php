<?php

namespace Tests\Feature\app\Http\Controllers;

use App\category;
use App\Http\Controllers\categoryController;
use Tests\TestCase;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Throwable;

class categorycontrollerTest extends TestCase
{
    /**
     * A basic test example.
     *
     * @return void
     */

    protected static $idTest=100;

    public function testList() {
        $this->assertTrue(true);
    }

    public function testPOST()
    {
        //$response = $this->call('DELETE', 'api/category/48');
        $response = $this->call('POST', 'api/category',['id'=>1,'title'=>'TestProduct']);
        $tempArray = json_decode($response,true);

        //$id =
        $this->assertEquals(200, $response->getStatusCode());
        //$this->call('DELETE', 'api/category/48');
    }

    public function testGET() {
        $response = $this->call('GET', 'api/category');

        $this->assertEquals(200, $response->getStatusCode());
    }

    public function testUpdate() {
        $this->assertTrue(true);
    }

    public function testDelete()
    {
        $categoryController = new categoryController();

//        $productId = category::where('title', 'BlueJeans1')->pluck('id');
//
//        $this->call('POST', 'api/category', ['title' => 'BlueJeans1']);
        $response = $this->remove(category::where('title', 'BlueJeans1')->pluck('id'));
        $this->assertEquals(200, $response->getStatusCode());
    }

    /**
     * @return \PHPUnit\Framework\TestResult
     */
    public function getTestResultObject()
    {
        return parent::getTestResultObject(); // TODO: Change the autogenerated stub
    }

    public function onNotSuccessfulTest(Throwable $t)
    {
        parent::onNotSuccessfulTest($t); // TODO: Change the autogenerated stub
    }

    public function testIsPostingJSON()
    {
        $this->get('api/category')
            ->assertJsonStructure([
                '*'=>['id',
                'title'
                ]
            ]);
    }
}
